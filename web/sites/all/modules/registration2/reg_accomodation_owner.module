<?php
function reg_accomodation_owner_block_info() {
        $blocks[' reg_accomodation_owner_form'] = array(
					'info' => t('reg_accomodation_owner'),
					'cache' => DRUPAL_CACHE_GLOBAL,
        );
		return $blocks;
}

function reg_accomodation_owner_block_view($delta = '') {
       
        $block = array();
		switch($delta) {
                case ' reg_accomodation_owner_form':
						$block['subject']=t('reg_accomodation_owner');
						$block['content']=drupal_get_form('reg_accomodation_owner_form');
				break;
        }
		return $block;
}

function reg_accomodation_owner_form($form, &$form_state) {

		/*$form['field1']=array(
			'#type'=>'fieldset',
			'#title'=>t('Info account'),
			'#collapsible' => TRUE, 
			'#collapsed' => FALSE,
		);*/
		$form['content']=array(
			'#prefix'=>'<div id="whole2">',
		);
		$form['name']=array(
			 '#type' => 'textfield',
			  '#required' => TRUE,
			  '#title' => t("Name"),
			  '#prefix'=>t("<h2>Info account</h2>"),
		);
		
		$form['surname']=array(
			 '#type' => 'textfield',
			  '#required' => TRUE,
			  '#title' => t("Surname"),
		);
		
		$form['E-mail']=array(
			 '#type' => 'textfield',
			  '#required' => TRUE,
			  '#title' => t("E-mail"),
		);
		
		$form['confirm_email']=array(
			 '#type' => 'textfield',
			  '#required' => TRUE,
			  '#title' => t("Confirm E-mail"),
		);
		/*$form['field2']=array(
			'#type'=>'fieldset',
			'#title'=>t('Informazioni Struttura'),
			'#collapsible' => TRUE, 
			'#collapsed' => FALSE,
		);*/
		
		$form['Nomedellastruttura']=array(
				'#type'=>'textfield',
				'#required' => TRUE,
				'#title' => t("Nome della struttura"),
				'#prefix'=>t("<h2>Informazioni Struttura</h2>"),
		);
		
		$form['selected']=array(
				'#type'=>'select',
				'#required' => TRUE,
				'#title' => t("Tipologia struttura"),
				'#options'=>array(
							0=>t('One'),
							1=>t('Two'),
							2=>t('Three'),
				),
				
				 
		
		);
		
		$form['nr_minimodipersone']=array(
				'#type'=>'textfield',
				'#required' => TRUE,
				'#title' => t("nr.minimo di persone"),
		);
		
		$form['nr_massimodipersone']=array(
				'#type'=>'textfield',
				'#required' => TRUE,
				'#title' => t("nr.massimo di persone"),
		);
		
		$form['prezzo_base']=array(
				'#type'=>'textfield',
				'#required' => TRUE,
				'#title' => t("Prezzo Base"),
		);
		
		/*$form['field3']=array(
			'#type'=>'fieldset',
			'#title'=>t('Indrizzo'),
			'#collapsible' => TRUE, 
			'#collapsed' => FALSE,
		);*/
		
		$form['indirizzo']=array(
				'#type'=>'textfield',
				'#required' => TRUE,
				'#title' => t("indirizzo"),
				'#description'=>t("insirisci l'indirizzo della tua struttura"),
				'#prefix'=>t("<h2 id='field3'>Indrizzo</h2>"),
		);
		
		$form['accetto']=array(
				'#type'=>'checkbox',
				'#required' => TRUE,
				'#title' => t("Acceto i termini cancellazione,le regole della casa,le condizioni di rimborso all'opsite e i termini del servizio"),
				
		
		);
		
		
        $form['submit'] = array(
                '#type' => 'submit',
                // #value is the text to display inside the button
                '#value' => t('Submit'),
		'#suffix'=>'</div>',
				'#ajax'=>array(
					'callback'=>"reg_accomodation_owner_form_callback",
					'wrapper'=>"whole2",
					'effect'=>'fade',
					
				),
        );
 
        return $form;
}
function reg_accomodation_owner_form_callback($form, &$form_state){
	if(!empty($form_state['executed'])){
		return '<div id="whole2">'.t("Congratulation!").'<br><p>'.t("Now you can manage your ads on <b>BBITALY</b>!").'<br>'.'Good trip!'.'</p>'.'<a class="homepage_link" href="http://crtvecode.com/bbnew">'.t("Back to homepage").'</a><br>'.'<p id="mail_notofication">'.t("Shortly recieve an email with your username and password needed to access the portal as hotelier").'</p>'.'</div>';
	}
	
}
 
function reg_accomodation_owner_form_validate($form, &$form_state) {
       
        $email = $form_state['values']['E-mail'];
		$confirm_mail=$form_state['values']['confirm_email'];
 
       
        if(valid_email_address($email) == 0) {
              form_set_error('E-mail', t('Not a valid email address'));
        }
		
		if($email!=$confirm_mail){
			form_set_error('confirm_email',t('Invalid confirm E-mail'));
		}
}

function reg_accomodation_owner_form_submit($form, &$form_state) {
	//	drupal_set_message(t('Thanks for registering in bbitaly'));
		
	$edit = array(
    'name' => $form_state['values']['name'],
    'surname' => $form_state['values']['surname'],
	'pass'=> user_password(8),
    'mail' => $form_state['values']['E-mail'],
    'init' => $form_state['values']['confirm_email'],
    'status' => 1,
    'access' => REQUEST_TIME,
	$roles = array('4' => 'Accommodation Owner'),
    'roles' => $roles,
  );
  
     $account = new stdClass();
     $account->is_new = TRUE;
    $user=user_save($account,$edit);
	$user->password=$edit['pass'];
	
	_user_mail_notify('register_no_approval_required',$user);
  }
 
function reg_accomodation_owner_token_info() {
    $info['tokens']['user']['password'] = array(
    'name' => t('Password'),
    'description' => t('The password by the user'),
    );
return $info;
}

/**
 * Implements hook_tokens().
 * */
function reg_accomodation_owner_tokens($type, $tokens, array $data = array(), array $options = array()) {
    $replacements = array();
    $url_options = array('absolute' => TRUE);
    if (isset($options['language'])) {
        $url_options['language'] = $options['language'];
    }
    if ($type == 'user' && !empty($data['user'])) {
        $account = $data['user'];
        foreach ($tokens as $name => $original) {
            switch ($name) {
                case 'password':
                    $replacements[$original] = $account->password;
                    break;
            }
        }
    }
    return $replacements;
}
?>